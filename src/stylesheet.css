@import url('https://fonts.googleapis.com/css2?family=Montserrat+Alternates:wght@300;500&display=swap');
:root {
  --value-neutral: rgba(110, 103, 112, 0.849);
  --value-light: rgb(255, 243, 203);
  --value-mid: rgba(163, 154, 123, 0.911);
  --value-dark: rgba(110, 105, 85, 0.568);

  --base-duration: 1s;
}

* {
  margin: 0;
  padding: 0;
  color: var(--value-light);

}

html {
  font-family: 'Montserrat Alternates', 'Arial Narrow', sans-serif;
  font-size: clamp(1px, 3vmin, 24px);
  text-transform: lowercase;
}

:focus-visible,
[data-active="true"] {
  outline: 2px solid var(--value-light);
}

button,
input,
ul {
  all: unset;
  list-style: none;
}

a,
button {
  text-decoration: none;
  transition: background-color .25s;
}

:is(a, button):is(:hover, :focus-visible),
[data-active="true"] {
  background-color: var(--value-dark);
  cursor: pointer;
}

header,
footer {
  display: grid;
  align-items: center;
  justify-content: space-between;
  gap: .5rem;
  padding: 0rem 2rem 0 2rem;
  color: var(--value-light);
}

header{
  position: relative;
  z-index: 1;
  grid-template: 1fr / max-content 1fr max-content;
  padding-top: 1rem;
  height: 6rem;
  font-weight: 500;
  transition: background-color 1s;
  text-shadow: 0px 0px 10px rgb(83, 71, 18);

}

main {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
  justify-content: flex-start;
  flex-direction: row;
}

footer {
  z-index: 10;
  position: relative;
  box-sizing: border-box;
  grid-template: 1fr / 1fr max-content;
  width: 100%;
  height: 5rem;
  font-weight:500;
  background-color: var(--value-dark);
}

.loader {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
  border: 1px solid var(--value-light);
  box-sizing: border-box;
  height: 100vh;
  font-size: 2rem;
  color: var(--value-light);
  background: center left / cover no-repeat url('../public/assets/prints/lake_matsubara_on_a_morning_by_kawase_hasui_load.webp');
}

.stem {
  display: grid;
  grid-template: min-content 1fr / 1fr;
  box-sizing: border-box;
  height: 100vh;
  font-size: 1rem;
  background-position: center left;
  background-size: cover;
  animation: fadeIn var(--base-duration);
}

.stem::after {
  z-index:10;
  content: "";
  position: absolute;
  inset: 0 0;
  width: 100%;
  height: 100%;
  background-image: url(assets/paper_grain.webp);
  pointer-events: none;
}

/* Header */
.search-bar {
  box-sizing: border-box;
  padding: .25rem;
  width: 100%;
  height: 1.5em;
  font-size: 2rem;
  color: var(--value-light);
  cursor: pointer;
}

.search-bar:hover {
  animation: pop .25s;
}

.search-bar:focus {
  cursor: text;
  background-color: var(--value-dark);
}

.search-bar::placeholder {
  color: var(--value-light);
  opacity: 1;
  text-overflow: ellipsis;
}

[data-error="true"].search-bar{
  width: 50vw;
}
[data-error="true"].search-bar::placeholder {
  text-align: center;
  color: rgb(255, 91, 91);
}

[data-error="true"].search-bar:focus::placeholder {
  color: transparent;
}

.search-bar:focus::placeholder {
  color: transparent;
  text-shadow: none;
}

.dropdown {
  z-index: 0;
  position: relative;
  display: grid;
  grid-auto-rows: fit-content;
  align-items: flex-start;
  gap:1rem;
  outline: 8rem solid var(--value-mid);
  padding: .25rem 1rem 1rem 1rem;
  background-color: var(--value-mid);
  animation: pop .25s;
}

/* Buttons */
.button {
  display: flex;
  align-items: center;
  box-sizing: border-box;
  user-select: none;
}

.button.--location {
  gap: 1rem;
  padding: 0 1rem 0 1rem;
  width: 100%;
  height: min(100%, 200px);
}

.button.--location strong {
  font-size: 1.1em;
}

.button.--forecast {
  gap: .75rem;
  padding: .5rem;
  width: max-content;
  height: 3rem;
  font-size: 1.2rem;
}

.button.--country {
  justify-content: center;
  box-sizing: content-box;
  border-radius: 50%;
  border: 2px solid var(--value-light);
  width: 2.4rem;
  aspect-ratio: 1/1;
  font-size: 1rem;
  text-transform: uppercase;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

.button.--artist {
  justify-content: flex-start;
  gap: .75em;
  padding: .5em;
  font-size: 2em;
  font-weight:300;
}


/* Content */
.section.--today {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 1em;
  padding: .5rem 2rem .5rem 2rem;
  width: 100%;
  font-size: clamp(1px, 3vmin, 20px);
  background-color: var(--value-mid);
}

h1 {
  font-weight:300;
  font-size: 6em;
}

p {
  font-size: .89rem;
  text-align: left;
}

cite {
  display: block;
}

.range {
  display: flex;
  flex-direction: column;
  gap: .25rem;
  font-size: 1.8em;
  font-weight: 300;
}

/* Decoration */
.weather-icon {
  position: relative;
  margin: 0 0 0 1em;
  width: 6em;
  height: 6em;
  border-radius: 50%;
  font-size: .25rem;
}

.weather-condition {
  display: flex;
  align-items: center;
  gap: .5rem;
  font-size: 1.25em;
  font-weight: 300;
}

hr{
  border-color: var(--value-light);
}

/* Data */
/* Weather Theme */
[data-phenom]::after {
  content: "";
  position: absolute;
  inset: 0 0;
}

[data-phenom] {
  border: .6em solid var(--value-light);
}

[data-phenom="overcast"]::after {
  outline: .25em solid var(--value-light);
  outline-offset: -1em;
  border-radius: 50%;
}

[data-phenom="rain"] {
  background-color: var(--value-light);
}

[data-phenom="foggy"]::after {
  outline: 1em solid var(--value-light);
  outline-offset: -3em;
  border-radius: 50%;
}

[data-phenom="thunder"]::after {
  border-radius: 40%;
  background-color: var(--value-light);
  clip-path: polygon(100% 50%, 100% 100%, 0 100%, 0 50%);
}

[data-phenom="snow"]::after {
  top: -.38em;
  content: "â–³";
  font-size: 7em;
}

[data-eventide] {
  background-size: cover;
  background-position: center left;
}

[data-eventide="day"] {
  background-color: var(--value-light);
}

[data-eventide="night"] {
  background-color: var(--value-mid);
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes pop {
    0% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-1vmin);
    }

    100% {
      transform: translateY(0);
    }
  }
}
